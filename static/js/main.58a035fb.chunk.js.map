{"version":3,"sources":["Styles/index.tsx","Components/AppBar.tsx","Store/Actions/ActionsTypes.tsx","Store/Actions/Actions.tsx","Components/Card.tsx","Components/ImageGallery.tsx","Styles/themes.tsx","App.tsx","reportWebVitals.ts","Store/Reducers/ImageReducer.tsx","index.tsx"],"names":["Container","styled","div","props","theme","colors","background","textColor","Title","h1","AppBar","section","cardBackground","card","boxShadow","Gallery","Scroll","PhotoCard","input","button","hover","Author","a","link","By","span","PhotoCardTitleLink","PhotoCardTitle","h3","PhotoCardImage","img","PhotoCardDesc","p","PhotoCardTags","Button","buttonBackground","buttonColor","TitleBar","toggleTheme","onClick","LOAD_IMAGES_PENDING","LOAD_IMAGES_SUCCESS","LOAD_IMAGES_FAIL","UPDATE_PAGE","UPDATE_TAG","getImages","dispatch","page","tag","type","getPage","url","axios","get","then","data","stat","payload","photos","photo","nextPage","currentPage","Card","photoTitle","author","description","tags","ownerId","imageId","src","href","target","length","substring","toString","ImageGallery","useDispatch","images","useSelector","state","flikrImages","React","getNewPage","newPage","map","image","i","title","ownername","server","id","secret","_content","owner","dataLength","next","hasMore","style","display","flexDirection","loader","endMessage","textAlign","lightTheme","darkTheme","App","isDarkMode","setIsDarkMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","error","isLoading","rootReducer","action","concat","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58a035fb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n   background: ${(props) => props.theme.colors.background};\n   color: ${(props) => props.theme.colors.textColor};\n   height: 100vh;\n`;\n\nexport const Title = styled.h1`\n   font-size: 1.5em;\n   text-align: center;\n`;\n\nexport const AppBar = styled.section`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   position: fixed;\n   top: 0;\n   background: ${(props) => props.theme.colors.cardBackground};\n   box-shadow: ${(props) => props.theme.colors.card.boxShadow}\n   height: 180px;\n   padding: 10px;\n   width: 100%;\n\n   & ${Title}\n`;\n\nexport const Gallery = styled.div`\n   background: ${(props) => props.theme.colors.background};\n   padding-top: 200px;\n`;\n\nexport const Scroll = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: space-evenly;\n   margin-top: 20px;\n   margin-bottom: 80px;\n`;\n\nexport const SearchInput = styled.input`\n   font-size: 0.75em;\n   height: auto;\n   padding: 10px;\n   margin: 10px;\n   border: none;\n   border-radius: 15px;\n   ::placeholder {\n      color: light-gray;\n   }\n`;\n\nexport const SearchButton = styled.button`\n   height: auto;\n   padding: 10px;\n   font-size: 0.75em;\n   border-radius: 15px;\n`;\n\nexport const PhotoCard = styled.div`\n   display: flex-column;\n   width: 150px;\n   height: auto;\n   border-radius: 20px;\n   background: ${(props) => props.theme.colors.cardBackground};\n   box-shadow: ${(props) => props.theme.colors.card.boxShadow}\n   margin: 0 auto;\n   padding: 10px;\n   margin: 10px;\n\n   &:hover {\n      background: ${(props) => props.theme.colors.card.hover.background}\n      box-shadow: ${(props) => props.theme.colors.card.hover.boxShadow}\n   }\n`;\n\nexport const Author = styled.a`\n   font-size: 0.65em;\n   display: block;\n   margin: 2px;\n   color: ${(props) => props.theme.colors.card.link};\n`;\n\nexport const By = styled.span`\n   font-size: 0.65em;\n   font-style: italic;\n   display: block;\n   color: ${(props) => props.theme.colors.textColor};\n   margin: 5px;\n`;\n\nexport const PhotoCardTitleLink = styled.a`\n   font-size: 0.85em;\n   color: ${(props) => props.theme.colors.card.link};\n`;\n\nexport const PhotoCardTitle = styled.h3`\n   font-size: 0.85em;\n   text-align: center;\n   color: black;\n   & ${Author} & ${By} & ${PhotoCardTitleLink}\n`;\n\nexport const PhotoCardImage = styled.img`\n   border-radius: 15px 15px 2px 2px;\n   background-color: green;\n   width: 100%;\n   height: 120px;\n`;\n\nexport const PhotoCardDesc = styled.p`\n   font-size: 0.75em;\n   text-align: center;\n   word-wrap: break-word;\n   padding: 5px;\n`;\n\nexport const PhotoCardTags = styled.section`\n   font-style: italic;\n   font-size: 0.6em;\n   text-align: center;\n   display: flex;\n   flex-direction: row;\n   justify-content: center;\n   text-align: center;\n`;\nexport const PhotoCardTagLink = styled.a`\n   margin: 1px;\n   text-decoration: none;\n`;\n\nexport const Loading = styled.section`\n   display: flex;\n   justify-content: center;\n   font-size: 1em;\n   text-align: center;\n   margin: 20px;\n`;\n\nexport const Button = styled.button`\n   background: ${(props) => props.theme.colors.buttonBackground};\n   color: ${(props) => props.theme.colors.buttonColor};\n   display: block;\n   margin-top: 24px;\n   margin-bottom: 24px;\n   max-width: 100%;\n   border: none;\n   line-height: 36px;\n   padding: 0 12px;\n   border-radius: 4px;\n   font-size: 14px;\n   cursor-pointer;\n`;\n","import * as React from \"react\";\nimport { AppBar, Button, Title } from \"../Styles\";\n\nexport interface AppBarProps {\n   toggleTheme: () => void;\n}\n\nconst TitleBar = ({ toggleTheme }: AppBarProps) => {\n   return (\n      <AppBar>\n         <Title>Flikr Photo Stream</Title>\n         <Button onClick={toggleTheme}>Toggle Dark Mode</Button>\n      </AppBar>\n   );\n};\n\nexport default TitleBar;\n","export const LOAD_IMAGES_PENDING = \"LOAD_IMAGES_PENDING\";\nexport const LOAD_IMAGES_SUCCESS = \"LOAD_IMAGES_SUCCESS\";\nexport const LOAD_IMAGES_FAIL = \"LOAD_IMAGES_FAIL\";\nexport const UPDATE_PAGE = \"UPDATE_PAGE\";\nexport const UPDATE_TAG = \"UPDATE_TAG\";\n","import {\n   LOAD_IMAGES_FAIL,\n   LOAD_IMAGES_PENDING,\n   LOAD_IMAGES_SUCCESS,\n   UPDATE_PAGE,\n   UPDATE_TAG,\n} from \"./ActionsTypes\";\nimport axios from \"axios\";\nimport { Dispatch } from \"redux\";\n\n// const apiKey = process.env.REACT_APP_API_KEY; // NOTE: Would Normally Place This KEY in the Back End and have the url point to the endpoint.\nconst apiKey = \"7144f4f55381136dda25363b0d75d00c\";\n\nexport const updateTag = (tag: string) => (dispatch: Dispatch) => {\n   dispatch({\n      type: UPDATE_TAG,\n      payload: tag,\n   });\n};\n\nexport const getImages = (\n   dispatch: Dispatch,\n   page: number,\n   tag: string\n) => async () => {\n   dispatch({ type: LOAD_IMAGES_PENDING });\n   const getPage = page;\n\n   const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${tag}&privacy_filter=1&safe_search=1&extras=description%2C+owner_name%2C+tags&per_page=30&page=${getPage}&format=json&nojsoncallback=1`;\n\n   await axios.get(url).then((data) => {\n      if (data.data.stat === \"fail\") {\n         dispatch({\n            type: LOAD_IMAGES_FAIL,\n            payload: \"Unable To Retrieve Images\",\n         });\n      } else {\n         dispatch({\n            type: LOAD_IMAGES_SUCCESS,\n            payload: data.data.photos.photo,\n         });\n      }\n   });\n};\n\nexport const nextPage = (currentPage: number) => (dispatch: Dispatch) => {\n   dispatch({ type: UPDATE_PAGE, payload: currentPage });\n};\n","import * as React from \"react\";\nimport {\n   PhotoCard,\n   PhotoCardImage,\n   PhotoCardTitle,\n   PhotoCardDesc,\n   PhotoCardTags,\n   Author,\n   By,\n   PhotoCardTitleLink,\n} from \"../Styles\";\n\nexport interface CardProps {\n   photoTitle: string;\n   author: string;\n   url: string;\n   description: string;\n   tags: [];\n   ownerId: string;\n   imageId: string;\n}\n\nconst Card = ({\n   photoTitle,\n   author,\n   url,\n   description,\n   tags,\n   ownerId,\n   imageId,\n}: CardProps) => {\n   return (\n      <PhotoCard>\n         <PhotoCardImage src={url} />\n         <PhotoCardTitle>\n            <PhotoCardTitleLink\n               href={`https://www.flickr.com/photos/${ownerId}/${imageId}`}\n               target=\"_blank\"\n            >\n               {photoTitle.length > 5\n                  ? photoTitle.substring(0, 30) + \" ...\"\n                  : photoTitle}\n            </PhotoCardTitleLink>{\" \"}\n            <By>by</By>{\" \"}\n            <Author\n               href={`https://www.flickr.com/people/${ownerId}`}\n               target=\"_blank\"\n            >\n               {author}\n            </Author>\n         </PhotoCardTitle>\n         <PhotoCardDesc>\n            {description.length > 5\n               ? description.substring(0, 50) + \" ...\"\n               : description}\n         </PhotoCardDesc>\n         {/* {handleTags()} */}\n         <PhotoCardTags>\n            {tags ? tags.toString().substring(0, 50) + \" ...\" : tags}\n         </PhotoCardTags>\n      </PhotoCard>\n   );\n};\n\nexport default Card;\n","import * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getImages, nextPage } from \"../Store/Actions/Actions\";\nimport { ImageState } from \"../Store/State/State\";\nimport { Gallery, Scroll } from \"../Styles\";\nimport Card from \"./Card\";\n\nconst ImageGallery = () => {\n   const dispatch = useDispatch();\n\n   const images = useSelector((state: ImageState) => state.flikrImages);\n   const page = useSelector((state: ImageState) => state.page);\n   const tag = useSelector((state: ImageState) => state.tag);\n\n   React.useEffect(() => {\n      if (images.length === 0) {\n         dispatch(getImages(dispatch, page, tag));\n      }\n   }, [images, dispatch, page, tag]);\n\n   const getNewPage = async () => {\n      let newPage = page + 1;\n      dispatch(nextPage(newPage));\n      dispatch(getImages(dispatch, newPage, tag));\n   };\n\n   const card =\n      images &&\n      images.map((image, i) => {\n         return (\n            <Card\n               key={i}\n               photoTitle={image.title}\n               author={image.ownername}\n               url={`https://live.staticflickr.com/${image.server}/${image.id}_${image.secret}_q.jpg`}\n               description={\n                  image.description._content\n                     ? image.description._content\n                     : \"No Description Available\"\n               }\n               ownerId={image.owner}\n               imageId={image.id}\n               tags={image.tags}\n            />\n         );\n      });\n\n   return (\n      <>\n         {images && (\n            <Gallery>\n               <InfiniteScroll\n                  dataLength={images.length}\n                  next={getNewPage}\n                  hasMore={true}\n                  style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\n                  loader={\"\"}\n                  endMessage={\n                     <p style={{ textAlign: \"center\" }}>That's All For Now!</p>\n                  }\n               >\n                  <Scroll>{card}</Scroll>\n               </InfiniteScroll>\n            </Gallery>\n         )}\n      </>\n   );\n};\n\nexport default ImageGallery;\n","export const lightTheme = {\n   colors: {\n      background: \"#ECEFF4\",\n      cardBackground: \"#E5E9F0\",\n      buttonBackground: \"#5E81AC\",\n      textColor: \"#2E3440\",\n      buttonColor: \"#ECEFF4\",\n      card: {\n         boxShadow: \"5px 5px 6px #8b8b8b, -5px -5px 6px #ffffff; \",\n         link: \"blue\",\n         hover: {\n            background: \"linear-gradient(145deg, #c1d3e6, #e5faff)\",\n            boxShadow: \"5px 5px 6px #85919e, -5px -5px 6px #ffffff;\",\n         },\n      },\n   },\n};\n\nexport const darkTheme = {\n   colors: {\n      background: \"#2E3440\",\n      cardBackground: \"#3B4252\",\n      buttonBackground: \"#d08770\",\n      textColor: \"#ECEFF4\",\n      buttonColor: \"#2E3440\",\n      card: {\n         boxShadow: \"7px 7px 14px #313744 -7px -7px 14px #454d60\",\n         link: \"#E0E0E0\",\n         hover: {\n            background: \"#3c4453\",\n            boxShadow: \"7px 7px 14px #323845 -7px -7px 14px #465061;\",\n         },\n      },\n   },\n};\n","import * as React from \"react\";\nimport TitleBar from \"./Components/AppBar\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTag } from \"./Store/Actions/Actions\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./Styles/themes\";\nimport { Container } from \"./Styles\";\n\nconst App = () => {\n   const dispatch = useDispatch();\n   const [isDarkMode, setIsDarkMode] = React.useState(false);\n\n   React.useEffect(() => {\n      dispatch(updateTag(\"mountain\"));\n   }, [dispatch]);\n\n   const toggleTheme = () => {\n      setIsDarkMode(!isDarkMode);\n   };\n\n   return (\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n         <Container>\n            <TitleBar toggleTheme={toggleTheme} />\n            <ImageGallery />\n         </Container>\n      </ThemeProvider>\n   );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n   LOAD_IMAGES_FAIL,\n   LOAD_IMAGES_PENDING,\n   LOAD_IMAGES_SUCCESS,\n   UPDATE_PAGE,\n   UPDATE_TAG,\n} from \"../Actions/ActionsTypes\";\nimport { ImageState } from \"../State/State\";\n\nexport interface Action<T, P = {}> {\n   type: T;\n   payload: P;\n}\nexport const defaultState: ImageState = {\n   flikrImages: [],\n   error: \"\",\n   isLoading: false,\n   page: 1,\n   tag: \"\",\n};\n\nconst getImages = (\n   state = defaultState,\n   action: Action<string, any>\n): ImageState => {\n   switch (action.type) {\n      case UPDATE_TAG:\n         return { ...state, tag: action.payload };\n      case LOAD_IMAGES_PENDING:\n         return { ...state, isLoading: true, error: \"\" };\n      case LOAD_IMAGES_SUCCESS:\n         return {\n            ...state,\n            flikrImages: state.flikrImages.concat(action.payload),\n            isLoading: false,\n         };\n      case LOAD_IMAGES_FAIL:\n         return { ...state, error: action.payload, isLoading: false };\n      case UPDATE_PAGE:\n         return { ...state, page: action.payload };\n      default:\n         return state;\n   }\n};\n\nexport default getImages;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport getImages from \"./Store/Reducers/ImageReducer\";\n\nconst rootReducer = getImages;\nconst store = createStore(\n   rootReducer,\n   composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}