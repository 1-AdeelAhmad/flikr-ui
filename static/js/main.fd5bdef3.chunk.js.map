{"version":3,"sources":["Styles/index.tsx","Components/AppBar.tsx","Store/Actions/ActionsTypes.tsx","Store/Actions/Actions.tsx","Components/Card.tsx","Components/ImageGallery.tsx","App.tsx","reportWebVitals.ts","Store/Reducers/ImageReducer.tsx","index.tsx"],"names":["Title","styled","h1","AppBar","section","Gallery","PhotoCard","input","button","Author","a","By","span","PhotoCardTitleLink","PhotoCardTitle","h3","PhotoCardImage","img","PhotoCardDesc","p","PhotoCardTags","Loading","TitleBar","LOAD_IMAGES_PENDING","LOAD_IMAGES_SUCCESS","LOAD_IMAGES_FAIL","UPDATE_PAGE","UPDATE_TAG","getImages","dispatch","page","tag","type","getPage","url","axios","get","then","data","stat","payload","photos","photo","nextPage","currentPage","Card","photoTitle","author","description","tags","ownerId","imageId","src","href","target","length","substring","toString","ImageGallery","useDispatch","images","useSelector","state","flikrImages","isError","error","React","getNewPage","newPage","card","map","image","i","title","ownername","server","id","secret","_content","owner","dataLength","next","hasMore","loader","endMessage","style","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","isLoading","rootReducer","action","concat","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd5bdef3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n   font-size: 1.5em;\n   text-align: center;\n`;\n\nexport const AppBar = styled.section`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   position: sticky;\n   top: 0;\n   background: linear-gradient(145deg, #b9b9b9, #9c9c9c);\n   box-shadow: 5px 5px 10px #727272, -5px -5px 10px #e8e8e8;\n   height: auto;\n   padding: 10px;\n   width: 100%;\n\n   & ${Title}\n`;\n\nexport const Gallery = styled.section`\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: space-evenly;\n   margin-top: 20px;\n`;\n\nexport const SearchInput = styled.input`\n   font-size: 0.75em;\n   height: auto;\n   padding: 10px;\n   margin: 10px;\n   border: none;\n   border-radius: 15px;\n   ::placeholder {\n      color: light-gray;\n   }\n`;\n\nexport const SearchButton = styled.button`\n   height: auto;\n   padding: 10px;\n   font-size: 0.75em;\n   border-radius: 15px;\n`;\n\nexport const PhotoCard = styled.section`\n   display: flex-column;\n   width: 150px;\n   height: auto;\n   border-radius: 20px;\n   background: #e0e0e0;\n   box-shadow: 5px 5px 6px #8b8b8b, -5px -5px 6px #ffffff;\n   margin: 0 auto;\n   padding: 10px;\n   margin: 10px;\n\n   &:hover {\n      background: linear-gradient(145deg, #c1d3e6, #e5faff);\n      box-shadow: 5px 5px 6px #85919e, -5px -5px 6px #ffffff;\n   }\n`;\n\nexport const Author = styled.a`\n   font-size: 0.65em;\n   display: block;\n   margin: 2px;\n`;\n\nexport const By = styled.span`\n   font-size: 0.65em;\n   font-style: italic;\n   display: block;\n`;\n\nexport const PhotoCardTitleLink = styled.a`\n   font-size: -0.85em;\n`;\n\nexport const PhotoCardTitle = styled.h3`\n   font-size: 0.85em;\n   text-align: center;\n   color: black;\n\n   & ${Author} & ${By} & ${PhotoCardTitleLink}\n`;\n\nexport const PhotoCardImage = styled.img`\n   border-radius: 15px 15px 2px 2px;\n   background-color: green;\n   width: 100%;\n   height: 120px;\n`;\n\nexport const PhotoCardDesc = styled.p`\n   font-size: 0.75em;\n   text-align: center;\n   word-wrap: break-word;\n   padding: 5px;\n`;\n\nexport const PhotoCardTags = styled.section`\n   font-style: italic;\n   font-size: 0.6em;\n   text-align: center;\n   display: flex;\n   flex-direction: row;\n   justify-content: center;\n   text-align: center;\n`;\nexport const PhotoCardTagLink = styled.a`\n   margin: 1px;\n   text-decoration: none;\n`;\n\nexport const Loading = styled.section`\n   display: flex;\n   justify-content: center;\n   font-size: 1em;\n   text-align: center;\n   margin: 0 auto;\n`;\n","import * as React from \"react\";\nimport { AppBar, Title } from \"../Styles\";\n\nconst TitleBar = () => {\n   return (\n      <AppBar>\n         <Title>Flikr Photo Stream</Title>\n      </AppBar>\n   );\n};\n\nexport default TitleBar;\n","export const LOAD_IMAGES_PENDING = \"LOAD_IMAGES_PENDING\";\nexport const LOAD_IMAGES_SUCCESS = \"LOAD_IMAGES_SUCCESS\";\nexport const LOAD_IMAGES_FAIL = \"LOAD_IMAGES_FAIL\";\nexport const UPDATE_PAGE = \"UPDATE_PAGE\";\nexport const UPDATE_TAG = \"UPDATE_TAG\";\n","import {\n   LOAD_IMAGES_FAIL,\n   LOAD_IMAGES_PENDING,\n   LOAD_IMAGES_SUCCESS,\n   UPDATE_PAGE,\n   UPDATE_TAG,\n} from \"./ActionsTypes\";\nimport axios from \"axios\";\nimport { Dispatch } from \"redux\";\n\n// const apiKey = process.env.REACT_APP_API_KEY; // NOTE: Would Normally Place This KEY in the Back End and have the url point to the endpoint.\nconst apiKey = \"7144f4f55381136dda25363b0d75d00c\";\n\nexport const updateTag = (tag: string) => (dispatch: Dispatch) => {\n   dispatch({\n      type: UPDATE_TAG,\n      payload: tag,\n   });\n};\n\nexport const getImages = (\n   dispatch: Dispatch,\n   page: number,\n   tag: string\n) => async () => {\n   dispatch({ type: LOAD_IMAGES_PENDING });\n   const getPage = page;\n\n   const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${tag}&privacy_filter=1&safe_search=1&extras=description%2C+owner_name%2C+tags&per_page=21&page=${getPage}&format=json&nojsoncallback=1`;\n\n   await axios.get(url).then((data) => {\n      if (data.data.stat === \"fail\") {\n         dispatch({\n            type: LOAD_IMAGES_FAIL,\n            payload: \"Unable To Retrieve Images\",\n         });\n      } else {\n         dispatch({\n            type: LOAD_IMAGES_SUCCESS,\n            payload: data.data.photos.photo,\n         });\n      }\n   });\n};\n\nexport const nextPage = (currentPage: number) => (dispatch: Dispatch) => {\n   dispatch({ type: UPDATE_PAGE, payload: currentPage });\n};\n","import * as React from \"react\";\nimport {\n   PhotoCard,\n   PhotoCardImage,\n   PhotoCardTitle,\n   PhotoCardDesc,\n   PhotoCardTags,\n   Author,\n   By,\n   PhotoCardTitleLink,\n} from \"../Styles\";\n\nexport interface CardProps {\n   photoTitle: string;\n   author: string;\n   url: string;\n   description: string;\n   tags: [];\n   ownerId: string;\n   imageId: string;\n}\n\nconst Card = ({\n   photoTitle,\n   author,\n   url,\n   description,\n   tags,\n   ownerId,\n   imageId,\n}: CardProps) => {\n   return (\n      <PhotoCard>\n         <PhotoCardImage src={url} />\n         <PhotoCardTitle>\n            <PhotoCardTitleLink\n               href={`https://www.flickr.com/photos/${ownerId}/${imageId}`}\n               target=\"_blank\"\n            >\n               {photoTitle.length > 5\n                  ? photoTitle.substring(0, 30) + \" ...\"\n                  : photoTitle}\n            </PhotoCardTitleLink>{\" \"}\n            <By>by</By>{\" \"}\n            <Author\n               href={`https://www.flickr.com/people/${ownerId}`}\n               target=\"_blank\"\n            >\n               {author}\n            </Author>\n         </PhotoCardTitle>\n         <PhotoCardDesc>\n            {description.length > 5\n               ? description.substring(0, 50) + \" ...\"\n               : description}\n         </PhotoCardDesc>\n         {/* {handleTags()} */}\n         <PhotoCardTags>\n            {tags ? tags.toString().substring(0, 50) + \" ...\" : tags}\n         </PhotoCardTags>\n      </PhotoCard>\n   );\n};\n\nexport default Card;\n","import * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getImages, nextPage } from \"../Store/Actions/Actions\";\nimport { ImageState } from \"../Store/State/State\";\nimport { Gallery, Loading } from \"../Styles\";\nimport Card from \"./Card\";\n\nconst ImageGallery = () => {\n   const dispatch = useDispatch();\n\n   const images = useSelector((state: ImageState) => state.flikrImages);\n   const isError = useSelector((state: ImageState) => state.error);\n   const page = useSelector((state: ImageState) => state.page);\n   const tag = useSelector((state: ImageState) => state.tag);\n\n   React.useEffect(() => {\n      if (images.length === 0) {\n         dispatch(getImages(dispatch, page, tag));\n      }\n   }, [images, dispatch, page, tag]);\n\n   const getNewPage = async () => {\n      let newPage = page + 1;\n      dispatch(nextPage(newPage));\n      dispatch(getImages(dispatch, newPage, tag));\n   };\n\n   const card =\n      images &&\n      images.map((image, i) => {\n         return (\n            <Card\n               key={i}\n               photoTitle={image.title}\n               author={image.ownername}\n               url={`https://live.staticflickr.com/${image.server}/${image.id}_${image.secret}_q.jpg`}\n               description={\n                  image.description._content\n                     ? image.description._content\n                     : \"No Description Available\"\n               }\n               ownerId={image.owner}\n               imageId={image.id}\n               tags={image.tags}\n            />\n         );\n      });\n\n   return (\n      <>\n         {images && (\n            <InfiniteScroll\n               dataLength={images.length}\n               next={getNewPage}\n               hasMore={true}\n               loader={\n                  isError ? (\n                     <Loading>{isError}</Loading>\n                  ) : (\n                     <Loading>Loading...</Loading>\n                  )\n               }\n               endMessage={\n                  <p style={{ textAlign: \"center\" }}>That's All For Now!</p>\n               }\n            >\n               <Gallery>{card}</Gallery>\n            </InfiniteScroll>\n         )}\n      </>\n   );\n};\n\nexport default ImageGallery;\n","import * as React from \"react\";\n\nimport TitleBar from \"./Components/AppBar\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTag } from \"./Store/Actions/Actions\";\n\nconst App = () => {\n   const dispatch = useDispatch();\n\n   React.useEffect(() => {\n      dispatch(updateTag(\"mountain\"));\n   }, [dispatch]);\n\n   return (\n      <div>\n         <TitleBar />\n         <ImageGallery />\n      </div>\n   );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n   LOAD_IMAGES_FAIL,\n   LOAD_IMAGES_PENDING,\n   LOAD_IMAGES_SUCCESS,\n   UPDATE_PAGE,\n   UPDATE_TAG,\n} from \"../Actions/ActionsTypes\";\nimport { ImageState } from \"../State/State\";\n\nexport interface Action<T, P = {}> {\n   type: T;\n   payload: P;\n}\nexport const defaultState: ImageState = {\n   flikrImages: [],\n   error: \"\",\n   isLoading: false,\n   page: 1,\n   tag: \"\",\n};\n\nconst getImages = (\n   state = defaultState,\n   action: Action<string, any>\n): ImageState => {\n   switch (action.type) {\n      case UPDATE_TAG:\n         return { ...state, tag: action.payload };\n      case LOAD_IMAGES_PENDING:\n         return { ...state, isLoading: true, error: \"\" };\n      case LOAD_IMAGES_SUCCESS:\n         return {\n            ...state,\n            flikrImages: state.flikrImages.concat(action.payload),\n            isLoading: false,\n         };\n      case LOAD_IMAGES_FAIL:\n         return { ...state, error: action.payload, isLoading: false };\n      case UPDATE_PAGE:\n         return { ...state, page: action.payload };\n      default:\n         return state;\n   }\n};\n\nexport default getImages;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport getImages from \"./Store/Reducers/ImageReducer\";\n\nconst rootReducer = getImages;\nconst store = createStore(\n   rootReducer,\n   composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}